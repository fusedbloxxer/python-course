# print("Primul meu string pentru curs 1" * 2)
#s
# print(2+2*2-2/1)
#
# a = "String"
# a += 'String1'
# print(type(a))
#
# # concatenare cu format
# a = "1"
# b = "2"
# c = "{1} {0} {1}".format(a, b)
# c = a + ' ' + b
# c = f"{a} {b}"
# print(c)
#
# a = "1"
# b = "2"
# c = int(a) + int(b)
# print(c)
#
# a = "1"
# b = 2
# c = int(a) + b
# print(c)
#
# a = input("Primul nr: ") # Returneaza string !
# b = input("Al doilea nr: ")
# c = int(a) + int(b)
# print(c)

# if conditie:
#     executie
# elif conditie:
#     executie2
# else:
#     executie3

# a = 2    # None - Obiect gol in memorie, nu are nicio valoare
# b = a    # Deep Copy !
# a = 3
#
# print(b)
#
# print(hex(int(id(a))))
# print(hex(int(id(b))))
#
# if a is b:
#     print("a este adevarat")
# elif a > b:
#     print("a este mai mare")
# else:
#     print("a este mai mic")

# while conditie:
#     sintaxa1
#     ...
#     sintaxa2

# x = 10
#
# # Nu exista x-- !
# while x > 1:
#     print("x este ", x)
#     pass  # Block de instructiuni GOL - Nu face nimic!
#     pass  # Este ca si cum rezerv acest spatiul pentru mai tarziu
#     x -= 1
#
#
# def funct():
#     pass


# statement1 if expression1 else (statement2 if expression2 else statement3)

# a = 3 if 1 == 1 else 3 if 1 == 5 else 7

# ok = "1"
#
# while ok == "1":
#     ok = input("1. Faceti conversie\n2. Iesiti din program\n")
#     if ok.isdigit() and int(ok) == 1:
#         euro = input("Valoare euro pentru convertire: ")
#         if len(euro) > 0:
#             floatSign = 1
#
#             if euro[0] == '-':
#                 floatSign = -1
#                 euro = euro[1:]
#
#             if euro.isdigit():
#                 euro = int(euro)
#             elif '.' in euro and len(a := euro.split(".")) and a[0].isdigit() and a[1].isdigit():
#                 euro = float(euro)
#             else:
#                 print("Valoarea nu este un numar!")
#                 continue
#             print("Valoarea convertita este: ", floatSign * euro * 4.87, " RON")

# str = "abecedar"
#
# print(str[-1])
# print(str[-5:])
# print(str[2::2])
# print(str[::-1])
#
# for x in str:
#     print(x)
#
# for poz, char in enumerate(str):
#     print(poz, char)
#
# for x in range(6):
#     print(x)
#
# for i in range(0, 5, 3):
#     print(i)
#
# for x in range(-1, 6, 2):
#     print(x)
#
# lista = [x for x in range(10)]  # Comprehension list
# lista = list(range(10))
# print(lista)

# Seturi, dictionare, list, tupluri

# cuvant = 'abcde'
# # print(cuvant[6]) Nu merge, out of bounds
# print(cuvant[6:])  # Cu slicing nu mai da eroare, e silent
# print(cuvant[-1])
# print(cuvant[-2])
#
# for letter in cuvant:
#     print(letter)
#
# print(cuvant.replace('d', 'f'))
#
# print(cuvant)
#
# print(cuvant := cuvant.replace('d', 'f'))
#
# if 'b' in cuvant:
#     print("perfect")
#
# print(cuvant.find('b'))  # -1 daca nu exista !
#
# print(cuvant.find('z'))
#
# print("".join(cuvant.split("c")))
#
# a = None  # Niciun tip de data
#
# # Tupluri:
# # tuples
# tuplu = (1)  # este int !!
# print(type(tuplu))
#
# tuplu = (1,)  # este tuplu pentru ca sunt mai multe
# print(type(tuplu))
#
# tuplu = tuplu + (2, 3, 4) # Se face append la concatenare
# print(tuplu)
#
# print(tuplu[2]) # indexare
# # tuplu[2] = 9 # Sunt IMMUTABLE ! La fel ca Set-urile
#
# # Sa instalam Selenium(Webdriverul + Chromedriver), o sa facem Webscraping!
# # + 1 problema ca tema

a = {1: 2, 2: "3456", (4, 5): "COOL"}
a1 = {1: 4}
a.update(a1)
print(a)

# from selenium import webdriver
# from webdriver_manager.chrome import ChromeDriverManager
#
# driver = webdriver.Chrome(ChromeDriverManager().install())
# driver.maximize_window()
# driver.get("https://www.cel.ro/index.php?main_page=login")
#
#
# def send_text_to_input(name_of_input, text):
#     name = driver.find_element_by_name(name_of_input)
#     name.send_keys(text)
#
#
# send_text_to_input("firstname", "Test")
# send_text_to_input("lastname", "Test")
# send_text_to_input("email_address", "random_email_224@yahoo.com")
# send_text_to_input("telephone", "0720731327")
# send_text_to_input("street_address", "Bucuresti")
#
# county = driver.find_element_by_id("entry_suburb")
# county.send_keys("Alba")
#
# city = driver.find_element_by_id("city")
# city.send_keys("Alba Iulia")
#
# termeni = driver.find_element_by_name("termeni")
# termeni.click()
#
# termeni.submit()
